{"ast":null,"code":"import _toConsumableArray from \"/Users/nikita/Projects/insa/web-socket-messenger/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/nikita/Projects/insa/web-socket-messenger/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nikita/Projects/insa/web-socket-messenger/frontend/src/components/ConversationList/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\nimport './ConversationList.css';\nexport default function ConversationList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      conversations = _useState2[0],\n      setConversations = _useState2[1];\n\n  useEffect(function () {\n    getConversations();\n  }, []);\n\n  var getConversations = function getConversations() {\n    axios.get('https://randomuser.me/api/?results=20').then(function (response) {\n      var newConversations = response.data.results.map(function (result) {\n        return {\n          photo: result.picture.large,\n          name: \"\".concat(result.name.first, \" \").concat(result.name.last),\n          text: 'Hello world! This is a long message that needs to be truncated.'\n        };\n      });\n      setConversations([].concat(_toConsumableArray(conversations), _toConsumableArray(newConversations)));\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"conversation-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    title: \"Messenger\",\n    leftItems: [React.createElement(ToolbarButton, {\n      key: \"cog\",\n      onClick: function onClick() {\n        return console.log(\"add a new conversation!\");\n      },\n      icon: \"ion-ios-cog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })],\n    rightItems: [React.createElement(ToolbarButton, {\n      key: \"add\",\n      onClick: function onClick() {\n        return console.log(\"add a new conversation!\");\n      },\n      icon: \"ion-ios-add-circle-outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(ConversationSearch, {\n    onclick: function onclick() {\n      return console.log(\"add a new conversation!\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), conversations.map(function (conversation) {\n    return React.createElement(ConversationListItem, {\n      key: conversation.name,\n      data: conversation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/nikita/Projects/insa/web-socket-messenger/frontend/src/components/ConversationList/index.js"],"names":["React","useState","useEffect","ConversationSearch","ConversationListItem","Toolbar","ToolbarButton","axios","ConversationList","props","conversations","setConversations","getConversations","get","then","response","newConversations","data","results","map","result","photo","picture","large","name","first","last","text","console","log","conversation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,wBAAP;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,kBACJR,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,MACvCS,aADuC;AAAA,MACxBC,gBADwB;;AAE9CT,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,gBAAgB;AACjB,GAFQ,EAEP,EAFO,CAAT;;AAID,MAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC5BL,IAAAA,KAAK,CAACM,GAAN,CAAU,uCAAV,EAAmDC,IAAnD,CAAwD,UAAAC,QAAQ,EAAI;AAChE,UAAIC,gBAAgB,GAAGD,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAsBC,GAAtB,CAA0B,UAAAC,MAAM,EAAI;AACzD,eAAO;AACLC,UAAAA,KAAK,EAAED,MAAM,CAACE,OAAP,CAAeC,KADjB;AAELC,UAAAA,IAAI,YAAKJ,MAAM,CAACI,IAAP,CAAYC,KAAjB,cAA0BL,MAAM,CAACI,IAAP,CAAYE,IAAtC,CAFC;AAGLC,UAAAA,IAAI,EAAE;AAHD,SAAP;AAKD,OANsB,CAAvB;AAOAhB,MAAAA,gBAAgB,8BAAKD,aAAL,sBAAuBM,gBAAvB,GAAhB;AACH,KATD;AAUD,GAXF;;AAaG,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAC,WADR;AAEE,IAAA,SAAS,EAAE,CACT,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAC,KAAnB;AAAyB,MAAA,OAAO,EAAE;AAAA,eAAMY,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAN;AAAA,OAAlC;AAAgF,MAAA,IAAI,EAAC,aAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADS,CAFb;AAKE,IAAA,UAAU,EAAE,CACV,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAC,KAAnB;AAAyB,MAAA,OAAO,EAAE;AAAA,eAAMD,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAN;AAAA,OAAlC;AAAiF,MAAA,IAAI,EAAC,4BAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,kBAAD;AAAoB,IAAA,OAAO,EAAE;AAAA,aAAMD,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAN;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAYInB,aAAa,CAACS,GAAd,CAAkB,UAAAW,YAAY;AAAA,WAC5B,oBAAC,oBAAD;AACE,MAAA,GAAG,EAAEA,YAAY,CAACN,IADpB;AAEE,MAAA,IAAI,EAAEM,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD4B;AAAA,GAA9B,CAZJ,CADF;AAsBH","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\n\nimport './ConversationList.css';\n\nexport default function ConversationList(props) {\n  const [conversations, setConversations] = useState([]);\n  useEffect(() => {\n    getConversations()\n  },[])\n\n const getConversations = () => {\n    axios.get('https://randomuser.me/api/?results=20').then(response => {\n        let newConversations = response.data.results.map(result => {\n          return {\n            photo: result.picture.large,\n            name: `${result.name.first} ${result.name.last}`,\n            text: 'Hello world! This is a long message that needs to be truncated.'\n          };\n        });\n        setConversations([...conversations, ...newConversations])\n    });\n  }\n\n    return (\n      <div className=\"conversation-list\" >\n        <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" onClick={() => console.log(\"add a new conversation!\")} icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" onClick={() => console.log(\"add a new conversation!\")}  icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        />\n        <ConversationSearch onclick={() => console.log(\"add a new conversation!\")}  />\n        {\n          conversations.map(conversation =>\n            <ConversationListItem\n              key={conversation.name}\n              data={conversation}\n            />\n          )\n        }\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}