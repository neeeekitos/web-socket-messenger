{"ast":null,"code":"import _slicedToArray from \"/Users/nikita/Projects/insa/web-socket-messenger/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nikita/Projects/insa/web-socket-messenger/frontend/src/components/ConversationList/AddChat.js\";\nimport React, { useState, useEffect } from 'react';\nimport './ConversationList.css';\nimport styles from \"./addchat.module.css\";\nimport Toolbar from \"../Toolbar\";\nimport ToolbarButton from \"../ToolbarButton\";\nimport ConversationSearch from \"../ConversationSearch\";\nimport ConversationListItem from \"../ConversationListItem\";\nimport ToggleButton from \"./ToggleButton\";\nimport { Form, Dropdown, Button, InputGroup } from \"react-bootstrap\";\nexport default function AddChat(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isGroup = _useState2[0],\n      setIsGroup = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  if (props.disabled) return null;else return React.createElement(\"div\", {\n    className: \"add-chat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: styles.addChatForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    className: styles.dropdown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Dropdown.Toggle, {\n    className: styles.dropdownToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, isGroup ? \"Group ▼\" : \"One2one ▼\"), React.createElement(Dropdown.Menu, {\n    className: styles.dropdownMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    href: \"#/o2o\",\n    className: styles.dropdownOption,\n    onClick: function onClick() {\n      return setIsGroup(false);\n    },\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"One2one\"), React.createElement(Dropdown.Item, {\n    href: \"#/group\",\n    className: styles.dropdownOption,\n    onClick: function onClick() {\n      return setIsGroup(true);\n    },\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Group\"))), React.createElement(\"input\", {\n    type: \"search\",\n    list: \"data\" // link to datalist below\n    ,\n    className: \"conversation-search-input\",\n    placeholder: isGroup ? \"Your group name\" : \"Username\",\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"datalist\", {\n    id: \"data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    key: 1,\n    value: \"puto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(Button, {\n    className: styles.btn,\n    onClick: function onClick() {\n      return props.createChat(isGroup, name);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Create\")));\n}","map":{"version":3,"sources":["/Users/nikita/Projects/insa/web-socket-messenger/frontend/src/components/ConversationList/AddChat.js"],"names":["React","useState","useEffect","styles","Toolbar","ToolbarButton","ConversationSearch","ConversationListItem","ToggleButton","Form","Dropdown","Button","InputGroup","AddChat","props","isGroup","setIsGroup","name","setName","disabled","addChatForm","dropdown","dropdownToggle","dropdownMenu","dropdownOption","e","target","value","btn","createChat"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport './ConversationList.css';\nimport styles from \"./addchat.module.css\";\nimport Toolbar from \"../Toolbar\";\nimport ToolbarButton from \"../ToolbarButton\";\nimport ConversationSearch from \"../ConversationSearch\";\nimport ConversationListItem from \"../ConversationListItem\";\nimport ToggleButton from \"./ToggleButton\";\nimport {Form, Dropdown, Button, InputGroup} from \"react-bootstrap\";\n\n\nexport default function AddChat(props) {\n\n    const [isGroup, setIsGroup] = useState(true);\n    const [name, setName] = useState(\"\");\n\n\n    if (props.disabled) return null\n    else return (\n        <div className=\"add-chat\">\n            <Form className={styles.addChatForm}>\n                <Dropdown className={styles.dropdown}>\n                    <Dropdown.Toggle className={styles.dropdownToggle}>\n                        {(isGroup) ? \"Group ▼\" : \"One2one ▼\"}\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu className={styles.dropdownMenu}>\n                        <Dropdown.Item href=\"#/o2o\" className={styles.dropdownOption} onClick={() => setIsGroup(false)} active>One2one</Dropdown.Item>\n                        <Dropdown.Item href=\"#/group\" className={styles.dropdownOption} onClick={() => setIsGroup(true)} active>Group</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                <input\n                    type=\"search\"\n                    list=\"data\" // link to datalist below\n                    className=\"conversation-search-input\"\n                    placeholder={isGroup ? \"Your group name\" : \"Username\"}\n                    value={name}\n                    onChange={e => setName(e.target.value)}\n                />\n                <datalist id=\"data\">\n                    <option key={1} value={\"puto\"} />\n                </datalist>\n                <Button className={styles.btn} onClick={() => props.createChat(isGroup, name)}>Create</Button>\n            </Form>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}