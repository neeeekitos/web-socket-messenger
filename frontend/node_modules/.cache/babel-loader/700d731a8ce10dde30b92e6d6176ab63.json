{"ast":null,"code":"var _jsxFileName = \"/Users/nikita/Projects/insa/web-socket-messenger/frontend/src/components/Messenger/index.js\";\nimport React from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\nimport './Messenger.css';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nvar clientSocket = new W3CWebSocket('ws://localhost:8081');\nexport default function Messenger(props) {\n  var url = 'http://localhost:8081/actions';\n  var options = {};\n  var sockjs = new SockJS(url,\n  /*_reserved*/\n  null, options);\n\n  sockjs.onopen = function () {\n    console.log('open'); //sock.send('test');\n\n    sockjs.send(JSON.stringify({\n      name: 'Test User',\n      message: 'This is a hard-coded test'\n    })); //sockjs.close();\n  };\n  /*  NB: Moved into App\n  sockjs.onmessage = function(e) {\n      console.log('message', e.data);\n  }; //*/\n\n\n  sockjs.onclose = function () {\n    console.log('close');\n  };\n\n  clientSocket.onopen = function (e) {\n    console.log(\"[open] WebSocket connection established\");\n  };\n\n  clientSocket.onmessage = function (event) {\n    alert(\"Data received from server: \".concat(event.data));\n  };\n\n  clientSocket.onclose = function (event) {\n    if (event.wasClean) {\n      alert(\"[close] Connection was closed properly, code=\".concat(event.code, \" cause=\").concat(event.reason));\n    } else {\n      alert('[close] Connection interrupted');\n    }\n  };\n\n  clientSocket.onerror = function (error) {\n    alert(\"[error] \".concat(error.message));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"messenger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"scrollable sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(ConversationList, {\n    wsClient: clientSocket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"scrollable content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(MessageList, {\n    wsClient: clientSocket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/nikita/Projects/insa/web-socket-messenger/frontend/src/components/Messenger/index.js"],"names":["React","ConversationList","MessageList","w3cwebsocket","W3CWebSocket","clientSocket","Messenger","props","url","options","sockjs","SockJS","onopen","console","log","send","JSON","stringify","name","message","onclose","e","onmessage","event","alert","data","wasClean","code","reason","onerror","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAO,iBAAP;AACA,SAASC,YAAY,IAAIC,YAAzB,QAA6C,WAA7C;AAEA,IAAMC,YAAY,GAAG,IAAID,YAAJ,CAAiB,qBAAjB,CAArB;AAEA,eAAe,SAASE,SAAT,CAAmBC,KAAnB,EAA0B;AAErC,MAAIC,GAAG,GAAG,+BAAV;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,MAAM,GAAG,IAAIC,MAAJ,CAAWH,GAAX;AAAgB;AAAa,MAA7B,EAAmCC,OAAnC,CAAb;;AAEAC,EAAAA,MAAM,CAACE,MAAP,GAAgB,YAAW;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADuB,CAGvB;;AACAJ,IAAAA,MAAM,CAACK,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAE;AAA9B,KAAf,CAAZ,EAJuB,CAKvB;AACH,GAND;AAOA;;;;;;AAIAT,EAAAA,MAAM,CAACU,OAAP,GAAiB,YAAW;AACxBP,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GAFD;;AAKAT,EAAAA,YAAY,CAACO,MAAb,GAAsB,UAASS,CAAT,EAAY;AAC9BR,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACH,GAFD;;AAIAT,EAAAA,YAAY,CAACiB,SAAb,GAAyB,UAASC,KAAT,EAAgB;AACrCC,IAAAA,KAAK,sCAA+BD,KAAK,CAACE,IAArC,EAAL;AACH,GAFD;;AAIApB,EAAAA,YAAY,CAACe,OAAb,GAAuB,UAASG,KAAT,EAAgB;AACnC,QAAIA,KAAK,CAACG,QAAV,EAAoB;AAChBF,MAAAA,KAAK,wDAAiDD,KAAK,CAACI,IAAvD,oBAAqEJ,KAAK,CAACK,MAA3E,EAAL;AACH,KAFD,MAEO;AAEHJ,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;AACJ,GAPD;;AASAnB,EAAAA,YAAY,CAACwB,OAAb,GAAuB,UAASC,KAAT,EAAgB;AACnCN,IAAAA,KAAK,mBAAYM,KAAK,CAACX,OAAlB,EAAL;AACH,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEd,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArBF,EAyBE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEA,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzBF,CADF;AA+BH","sourcesContent":["import React from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\nimport './Messenger.css';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nconst clientSocket = new W3CWebSocket('ws://localhost:8081');\n\nexport default function Messenger(props) {\n\n    let url = 'http://localhost:8081/actions';\n    let options = {};\n    let sockjs = new SockJS(url, /*_reserved*/null, options);\n\n    sockjs.onopen = function() {\n        console.log('open');\n\n        //sock.send('test');\n        sockjs.send(JSON.stringify({ name: 'Test User', message: 'This is a hard-coded test'}));\n        //sockjs.close();\n    };\n    /*  NB: Moved into App\n    sockjs.onmessage = function(e) {\n        console.log('message', e.data);\n    }; //*/\n    sockjs.onclose = function() {\n        console.log('close');\n    };\n\n\n    clientSocket.onopen = function(e) {\n        console.log(\"[open] WebSocket connection established\");\n    };\n\n    clientSocket.onmessage = function(event) {\n        alert(`Data received from server: ${event.data}`);\n    };\n\n    clientSocket.onclose = function(event) {\n        if (event.wasClean) {\n            alert(`[close] Connection was closed properly, code=${event.code} cause=${event.reason}`);\n        } else {\n\n            alert('[close] Connection interrupted');\n        }\n    };\n\n    clientSocket.onerror = function(error) {\n        alert(`[error] ${error.message}`);\n    };\n\n    return (\n      <div className=\"messenger\">\n\n          {/* <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        /> */}\n\n        {/* <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        /> */}\n\n        <div className=\"scrollable sidebar\">\n          <ConversationList wsClient={clientSocket}/>\n        </div>\n\n        <div className=\"scrollable content\">\n          <MessageList wsClient={clientSocket}/>\n        </div>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}