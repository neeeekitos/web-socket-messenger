{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nikita/Projects/insa/web-socket-messenger/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nikita/Projects/insa/web-socket-messenger/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/nikita/Projects/insa/web-socket-messenger/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nikita/Projects/insa/web-socket-messenger/frontend/src/components/ConversationList/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\nimport './ConversationList.css';\nimport AddChat from \"./AddChat\";\nexport default function ConversationList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      conversations = _useState2[0],\n      setConversations = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      addChatOpened = _useState4[0],\n      setNewChatOpen = _useState4[1];\n\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return setChats();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }))();\n  }, [props.chats]);\n\n  var setChats =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var responseArray, conversationsNumber, responseImagers, newConversations;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              responseArray = props.chats;\n              conversationsNumber = responseArray.length;\n              console.log(\"fetching images for \".concat(conversationsNumber, \" conversations.\"));\n              _context2.next = 5;\n              return axios.get(\"https://randomuser.me/api/?results=\".concat(conversationsNumber));\n\n            case 5:\n              responseImagers = _context2.sent;\n              newConversations = responseArray.map(function (result, index) {\n                return {\n                  photo: responseImagers.data.results[index].picture.large,\n                  name: \"\".concat(result.groupName),\n                  text: 'Hello world! This is a long message that needs to be truncated.'\n                };\n              }); // setConversations([...conversations, ...newConversations])\n\n              setConversations(newConversations);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    return function setChats() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var createChat =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(isGroup, name) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log('creating chat...');\n              console.log(isGroup);\n              console.log(name);\n\n              if (!isGroup) {\n                _context3.next = 9;\n                break;\n              }\n\n              _context3.next = 6;\n              return axios.post('http://localhost:8081/actions/createGroup', name, {\n                headers: {\n                  'Content-Type': 'text/plain'\n                }\n              });\n\n            case 6:\n              response = _context3.sent;\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.next = 11;\n              return axios.post('http://localhost:8081/actions/createO2o', name, {\n                headers: {\n                  'Content-Type': 'text/plain'\n                }\n              });\n\n            case 11:\n              response = _context3.sent;\n\n            case 12:\n              console.log(response.data, response.status);\n              alert(\"Server response : \".concat(response.data));\n              console.log(response);\n              _context3.next = 17;\n              return axios.get(\"http://localhost:8081/actions/allUserChats\");\n\n            case 17:\n              // close add chat section\n              setNewChatOpen(false);\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n\n    return function createChat(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(\"div\", {\n    className: \"conversation-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    title: \"Messenger\",\n    leftItems: [React.createElement(ToolbarButton, {\n      key: \"cog\",\n      onClick: function onClick() {\n        return console.log(\"properties open\");\n      },\n      icon: \"ion-ios-cog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })],\n    rightItems: [React.createElement(ToolbarButton, {\n      key: \"add\",\n      onClick: function onClick() {\n        return setNewChatOpen(true);\n      },\n      icon: \"ion-ios-add-circle-outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(AddChat, {\n    allUsers: props.allUsers,\n    disabled: !addChatOpened,\n    createChat: createChat,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(ConversationSearch, {\n    onclick: function onclick() {\n      return console.log(\"search\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), conversations.map(function (conversation) {\n    return React.createElement(ConversationListItem, {\n      key: conversation.name,\n      data: conversation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/nikita/Projects/insa/web-socket-messenger/frontend/src/components/ConversationList/index.js"],"names":["React","useState","useEffect","ConversationSearch","ConversationListItem","Toolbar","ToolbarButton","axios","AddChat","ConversationList","props","conversations","setConversations","addChatOpened","setNewChatOpen","setChats","chats","responseArray","conversationsNumber","length","console","log","get","responseImagers","newConversations","map","result","index","photo","data","results","picture","large","name","groupName","text","createChat","isGroup","post","headers","response","status","alert","allUsers","conversation"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\n\nimport './ConversationList.css';\nimport AddChat from \"./AddChat\";\n\nexport default function ConversationList(props) {\n  const [conversations, setConversations] = useState([]);\n  const [addChatOpened, setNewChatOpen] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            await setChats();\n        })();\n    },[props.chats]);\n\n    const setChats = async () => {\n\n        const responseArray = props.chats;\n        const conversationsNumber = responseArray.length;\n        console.log(`fetching images for ${conversationsNumber} conversations.`);\n\n        const responseImagers = await axios.get(`https://randomuser.me/api/?results=${conversationsNumber}`);\n\n        let newConversations = responseArray.map((result, index) => {\n          return {\n              photo: responseImagers.data.results[index].picture.large,\n              name: `${result.groupName}`,\n              text: 'Hello world! This is a long message that needs to be truncated.'\n          };\n        });\n        // setConversations([...conversations, ...newConversations])\n        setConversations(newConversations);\n    }\n\n  const createChat = async (isGroup, name) => {\n\n      console.log('creating chat...')\n      console.log(isGroup)\n      console.log(name)\n      let response;\n      if (isGroup)\n        response = await axios.post('http://localhost:8081/actions/createGroup', name,\n            {\n                headers: {\n                    'Content-Type': 'text/plain',\n                }\n            });\n      else\n        response = await axios.post('http://localhost:8081/actions/createO2o', name,\n            {\n                headers: {\n                    'Content-Type': 'text/plain',\n                }\n            });\n\n      console.log(response.data, response.status);\n      alert(`Server response : ${response.data}`);\n      console.log(response);\n      await axios.get(\"http://localhost:8081/actions/allUserChats\");\n\n      // close add chat section\n      setNewChatOpen(false);\n  }\n\n    return (\n      <div className=\"conversation-list\" >\n        <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" onClick={() => console.log(\"properties open\")} icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\"  onClick={() => setNewChatOpen(true)} icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        />\n          <AddChat allUsers={props.allUsers} disabled={!addChatOpened}  createChat={createChat}/>\n        <ConversationSearch onclick={() => console.log(\"search\")}  />\n        {\n          conversations.map(conversation =>\n            <ConversationListItem\n              key={conversation.name}\n              data={conversation}\n            />\n          )\n        }\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}